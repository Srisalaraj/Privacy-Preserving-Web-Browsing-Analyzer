# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lyj6vIMY_U0H69o9eYUhJnsyJ4A5el6e
"""

import hashlib
import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer

class PrivacyPreservingData:
    def __init__(self):
        self.df = None
        self.vectorizer = None
        self.X = None
        self.y = None

    def hash_value(self, value):
        """Return SHA-256 hash of a string"""
        return hashlib.sha256(value.encode()).hexdigest()

    def load_dataset(self):
        """Load dataset with ID, URL, Wi-Fi type, and label"""
        data = {
            "id": list(range(1, 11)),
            "url": [
                "http://example.com/login",
                "https://banking-secure-update.com",
                "http://phishing-attack-site.net",
                "https://google.com/search",
                "http://malware-download.org",
                "https://wikipedia.org/wiki/Privacy",
                "http://clickfree-gift.win",
                "https://github.com/openai",
                "http://unsafe-downloads.biz",
                "https://amazon.com/deals"
            ],
            "wifi_type": [
                "Private", "Public", "Public", "Private", "Public",
                "Private", "Public", "Private", "Public", "Private"
            ],
            "label": [0, 1, 1, 0, 1, 0, 1, 0, 1, 0]
        }
        self.df = pd.DataFrame(data)
        self.df["url_hashed"] = self.df["url"].apply(self.hash_value)
        return self.df

    def preprocess(self):
        """Vectorize URL using TF-IDF"""
        self.vectorizer = TfidfVectorizer(analyzer="char", ngram_range=(2, 4))
        self.X = self.vectorizer.fit_transform(self.df["url"])
        self.y = self.df["label"]
        return self.X, self.y, self.vectorizer