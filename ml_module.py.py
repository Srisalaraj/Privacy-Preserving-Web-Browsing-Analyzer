# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lyj6vIMY_U0H69o9eYUhJnsyJ4A5el6e
"""

from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
from sklearn.tree import export_graphviz
import graphviz

class WebAnalyzerML:
    def __init__(self, vectorizer):
        self.vectorizer = vectorizer
        self.model = RandomForestClassifier(n_estimators=200, random_state=42)

    def train(self, X, y):
        X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42)
        self.model.fit(X_train, y_train)
        y_pred = self.model.predict(X_test)
        acc = accuracy_score(y_test, y_pred)
        cm = confusion_matrix(y_test, y_pred)
        report = classification_report(y_test, y_pred)
        return acc, cm, report

    def predict(self, url):
        features = self.vectorizer.transform([url])
        pred = self.model.predict(features)[0]
        return "Safe" if pred == 0 else "Suspicious"

    def visualize_tree(self, depth=3):
        estimator = self.model.estimators_[0]
        dot_data = export_graphviz(
            estimator,
            out_file=None,
            feature_names=self.vectorizer.get_feature_names_out(),
            class_names=["Safe", "Suspicious"],
            filled=True, rounded=True,
            special_characters=True,
            max_depth=depth
        )
        graph = graphviz.Source(dot_data)
        graph.render("decision_tree", format="png", cleanup=True)
        print("Decision Tree saved as decision_tree.png")